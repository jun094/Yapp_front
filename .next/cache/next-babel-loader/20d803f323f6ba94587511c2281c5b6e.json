{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppLayout from '../componets/AppLayOut';\nimport rootSaga from '../saga';\nimport reducer from '../reducer';\nimport '../css/wrraper.scss';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(Provider, {\n        store: store\n      }, __jsx(Head, null, __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\"\n      }), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      }), __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.quilljs.com/1.2.6/quill.snow.css\"\n      }), __jsx(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Montserrat\",\n        rel: \"stylesheet\"\n      }), __jsx(\"script\", {\n        src: \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"\n      })), __jsx(AppLayout, null, __jsx(Component, _extends({\n        id: \"wrraper\"\n      }, pageProps))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n\n                if (!Component.getInitialProps) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return Component.getInitialProps(ctx);\n\n              case 4:\n                _context.t0 = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                _context.t0 = {};\n\n              case 8:\n                pageProps = _context.t0;\n                //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\n                pageProps.query = ctx.query;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nvar configureStore = function configureStore(initialState, option) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(MyApp);","map":{"version":3,"sources":["/Users/kimserver/GitHub/Yapp_front/pages/_app.js"],"names":["React","App","Head","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","AppLayout","rootSaga","reducer","MyApp","props","Component","pageProps","store","ctx","getInitialProps","query","configureStore","initialState","option","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,qBAAP;;IACMC,K;;;;;;;;;;;;;6BAQM;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAEJ,aACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAIA;AAAnB,SACA,MAAC,IAAD,QACE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B,QADF,EAEE;AAAM,QAAA,OAAO,EAAC;AAAd,QAFF,EAGE;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC;AAA5B,QAHF,EAIE;AAAM,QAAA,IAAI,EAAC,oDAAX;AAAgE,QAAA,GAAG,EAAC;AAApE,QAJF,EAKE;AAAQ,QAAA,GAAG,EAAC;AAAZ,QALF,CADA,EASA,MAAC,SAAD,QACE,MAAC,SAAD;AAAW,QAAA,EAAE,EAAG;AAAhB,SAA8BD,SAA9B,EADF,CATA,CADJ;AAeH;;;;;;;;;;;;AAxB6BD,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;;qBACnBH,SAAS,CAACI,e;;;;;;uBACpBJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;;;;;;8BAAiC,E;;;AADnCF,gBAAAA,S;AAEN;AACAA,gBAAAA,SAAS,CAACI,KAAV,GAAkBF,GAAG,CAACE,KAAtB;iDACO;AAACJ,kBAAAA,SAAS,EAATA;AAAD,iB;;;;;;;;;;;;;;;;;;;EANKd,G;;AA2BpB,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,MAAf,EAAwB;AAC3C,MAAMC,cAAc,GAAGf,oBAAoB,EAA3C;AACA,MAAMgB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,MAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACfvB,OAAO,CAACD,eAAe,MAAf,SAAmBoB,WAAnB,CAAD,CADQ,GAEfnB,OAAO,CACLD,eAAe,MAAf,SAAmBoB,WAAnB,CADK,EAEL,CAACF,MAAM,CAACO,QAAR,IAAoB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAAnE,GAAiFD,MAAM,CAACC,4BAAP,EAAjF,GAAyH,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFrH,CAFT;AAMA,MAAMhB,KAAK,GAAGV,WAAW,CAACK,OAAD,EAAUU,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBvB,QAAnB;AACA,SAAOM,KAAP;AACH,CAZD;;AAaA,eAAeb,SAAS,CAACiB,cAAD,CAAT,CAA0BR,KAA1B,CAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Head from 'next/head'\nimport withRedux from 'next-redux-wrapper'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport AppLayout from '../componets/AppLayOut'\n\nimport rootSaga from '../saga'\nimport reducer from '../reducer'\n\nimport '../css/wrraper.scss'\nclass MyApp extends App{\n    static async getInitialProps({Component, ctx}){\n        const pageProps = Component.getInitialProps\n        ? await Component.getInitialProps(ctx) : {}\n        //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\n        pageProps.query = ctx.query;\n        return {pageProps}\n    }\n    render(){\n        const {Component, pageProps, store} = this.props\n        return(\n            <Provider store = {store}>  \n            <Head>\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n              <meta charSet=\"utf-8\" />\n              <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\n              <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'></link>\n              <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n            </Head>\n  \n            <AppLayout>\n              <Component id = \"wrraper\" {...pageProps} />\n            </AppLayout>\n        </Provider>\n        )\n    }\n}\nconst configureStore = (initialState, option)=>{\n    const sagaMiddleware = createSagaMiddleware()\n    const middlewares = [sagaMiddleware]\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n        applyMiddleware(...middlewares),\n        !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    )\n    const store = createStore(reducer, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\nexport default withRedux(configureStore)(MyApp)"]},"metadata":{},"sourceType":"module"}