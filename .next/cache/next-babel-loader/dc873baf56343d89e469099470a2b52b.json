{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/kimserver/GitHub/Yapp_front/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppLayout from '../componets/AppLayOut';\nimport rootSaga from '../saga';\nimport reducer from '../reducer';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.quilljs.com/1.2.6/quill.snow.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), __jsx(\"script\", {\n      src: \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), __jsx(AppLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst configureStore = (initialState, option) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware(...middlewares)) : compose(applyMiddleware(...middlewares), !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(MyApp);","map":{"version":3,"sources":["/Users/kimserver/GitHub/Yapp_front/pages/_app.js"],"names":["React","App","Head","withRedux","applyMiddleware","compose","createStore","Provider","createSagaMiddleware","AppLayout","rootSaga","reducer","MyApp","getInitialProps","Component","ctx","pageProps","query","render","store","props","configureStore","initialState","option","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","isServer","window","__REDUX_DEVTOOLS_EXTENSION__","f","run"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,KAAN,SAAoBX,GAApB,CAAuB;AACnB,eAAaY,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA7B,EAA8C;AAC1C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GAChB,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADU,GACuB,EADzC,CAD0C,CAG1C;;AACAC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAACD,MAAAA;AAAD,KAAP;AACH;;AACDE,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACJ,MAAAA,SAAD;AAAYE,MAAAA,SAAZ;AAAuBG,MAAAA;AAAvB,QAAgC,KAAKC,KAA3C;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAID,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,qCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC,wCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE;AAAQ,MAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADA,EASA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CATA,CADJ;AAeH;;AAzBkB;;AA2BvB,MAAMK,cAAc,GAAG,CAACC,YAAD,EAAeC,MAAf,KAAwB;AAC3C,QAAMC,cAAc,GAAGhB,oBAAoB,EAA3C;AACA,QAAMiB,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACfxB,OAAO,CAACD,eAAe,CAAC,GAAGqB,WAAJ,CAAhB,CADQ,GAEfpB,OAAO,CACLD,eAAe,CAAC,GAAGqB,WAAJ,CADV,EAEL,CAACF,MAAM,CAACO,QAAR,IAAoB,OAAOC,MAAM,CAACC,4BAAd,KAA+C,WAAnE,GAAiFD,MAAM,CAACC,4BAAP,EAAjF,GAAyHC,CAAC,IAAIA,CAFzH,CAFT;AAMA,QAAMd,KAAK,GAAGb,WAAW,CAACK,OAAD,EAAUW,YAAV,EAAwBI,QAAxB,CAAzB;AACAF,EAAAA,cAAc,CAACU,GAAf,CAAmBxB,QAAnB;AACA,SAAOS,KAAP;AACH,CAZD;;AAaA,eAAehB,SAAS,CAACkB,cAAD,CAAT,CAA0BT,KAA1B,CAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Head from 'next/head'\nimport withRedux from 'next-redux-wrapper'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport AppLayout from '../componets/AppLayOut'\n\nimport rootSaga from '../saga'\nimport reducer from '../reducer'\n\nclass MyApp extends App{\n    static async getInitialProps({Component, ctx}){\n        const pageProps = Component.getInitialProps\n        ? await Component.getInitialProps(ctx) : {}\n        //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\n        pageProps.query = ctx.query;\n        return {pageProps}\n    }\n    render(){\n        const {Component, pageProps, store} = this.props\n        return(\n            <Provider store = {store}>  \n            <Head>\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n              <meta charSet=\"utf-8\" />\n              <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\n              \n              <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n            </Head>\n  \n            <AppLayout>\n              <Component {...pageProps} />\n            </AppLayout>\n        </Provider>\n        )\n    }\n}\nconst configureStore = (initialState, option)=>{\n    const sagaMiddleware = createSagaMiddleware()\n    const middlewares = [sagaMiddleware]\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n        applyMiddleware(...middlewares),\n        !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    )\n    const store = createStore(reducer, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\nexport default withRedux(configureStore)(MyApp)"]},"metadata":{},"sourceType":"module"}