{"version":3,"file":"static/webpack/static/development/pages/_app.js.b5ff532513be77e1ef7d.hot-update.js","sources":["webpack:///./componets/AppLayOut.js","webpack:///./componets/NavBar.js","webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\n/* 이 파일이 보통 리액트를 시작할때 보는 \n    첫 화면 뿌려주기시작하는 단계로 보는것이 무방합니다\n    children에는 pages에 있는 index.js가 들어가서 뿌려지게됩니다.\n*/\n\nimport NavBar from './NavBar'\n\nconst AppLayOut = ({children})=>{\n    \n    return(\n        <div>\n            <NavBar></NavBar>\n            {children}\n        </div>\n    )\n}\n\nexport default AppLayOut","import React from 'react'\n\n\n\nimport '../css/NavBar.scss'\nconst NavBar = ()=>{\n    return(\n        <div>\n            <div id = \"logo_container\">\n                <p id = \"logo_image\"> 로고이미지</p>\n            </div>\n            <div id = \"navigation\">\n                <ul className = \"nav-links\">\n                    <li>\n                        모집중인프로젝트\n                    </li>\n                    <li>\n                        프로젝트후기\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default NavBar","import React from 'react'\nimport App from 'next/app'\nimport Head from 'next/head'\nimport withRedux from 'next-redux-wrapper'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport AppLayout from '../componets/AppLayOut'\n\nimport rootSaga from '../saga'\nimport reducer from '../reducer'\n\nimport '../css/wrraper.scss'\nclass MyApp extends App{\n    static async getInitialProps({Component, ctx}){\n        const pageProps = Component.getInitialProps\n        ? await Component.getInitialProps(ctx) : {}\n        //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\n        pageProps.query = ctx.query;\n        return {pageProps}\n    }\n    render(){\n        const {Component, pageProps, store} = this.props\n        return(\n            <Provider store = {store}>  \n            <Head>\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n              <meta charSet=\"utf-8\" />\n              <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\n              \n              <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n            </Head>\n  \n            <AppLayout>\n              <Component id = \"wrraper\" {...pageProps} />\n            </AppLayout>\n        </Provider>\n        )\n    }\n}\nconst configureStore = (initialState, option)=>{\n    const sagaMiddleware = createSagaMiddleware()\n    const middlewares = [sagaMiddleware]\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n        applyMiddleware(...middlewares),\n        !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    )\n    const store = createStore(reducer, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\nexport default withRedux(configureStore)(MyApp)"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;;;;AAKA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAxBA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AADA;AACA;;AAFA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAPA;AACA;AA0BA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}