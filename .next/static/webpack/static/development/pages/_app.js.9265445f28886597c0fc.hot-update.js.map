{"version":3,"file":"static/webpack/static/development/pages/_app.js.9265445f28886597c0fc.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Head from 'next/head'\nimport withRedux from 'next-redux-wrapper'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport AppLayout from '../componets/AppLayOut'\n\nimport rootSaga from '../saga'\nimport reducer from '../reducer'\n\nimport '../css/wrraper.scss'\nclass MyApp extends App{\n    static async getInitialProps({Component, ctx}){\n        const pageProps = Component.getInitialProps\n        ? await Component.getInitialProps(ctx) : {}\n        //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\n        pageProps.query = ctx.query;\n        return {pageProps}\n    }\n    render(){\n        const {Component, pageProps, store} = this.props\n        return(\n            <Provider store = {store}>  \n            <Head>\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n              <meta charSet=\"utf-8\" />\n              <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\n              <link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'></link>\n              <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n            </Head>\n  \n            <AppLayout>\n              <Component id = \"wrraper\" {...pageProps} />\n            </AppLayout>\n        </Provider>\n        )\n    }\n}\nconst configureStore = (initialState, option)=>{\n    const sagaMiddleware = createSagaMiddleware()\n    const middlewares = [sagaMiddleware]\n    const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n        applyMiddleware(...middlewares),\n        !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    )\n    const store = createStore(reducer, initialState, enhancer);\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\nexport default withRedux(configureStore)(MyApp)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAIA;;;;;;;;;;;;AAxBA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AADA;AACA;;AAFA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAPA;AACA;AA0BA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}