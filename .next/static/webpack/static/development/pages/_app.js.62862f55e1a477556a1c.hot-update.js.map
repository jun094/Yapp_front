{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.62862f55e1a477556a1c.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\r\nimport App from 'next/app'\r\nimport Head from 'next/head'\r\nimport withRedux from 'next-redux-wrapper'\r\nimport {applyMiddleware, compose, createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport AppLayout from '../componets/AppLayOut'\r\n\r\nimport rootSaga from '../saga'\r\nimport reducer from '../reducer'\r\n\r\nclass MyApp extends App{\r\n    static async getInitialProps({Component, ctx}){\r\n        const pageProps = Component.getInitialProps\r\n        ? await Component.getInitialProps(ctx) : {}\r\n        //getInitialProps 가 서버사이드렌더링 효과를 줄수 있게 도와주는거에요\r\n        pageProps.query = ctx.query;\r\n        return {pageProps}\r\n    }\r\n    render(){\r\n        const {Component, pageProps, store} = this.props\r\n        return(\r\n            <Provider store = {store}>  \r\n            <Head>\r\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n              <meta charSet=\"utf-8\" />\r\n              <link rel=\"stylesheet\" href=\"//cdn.quilljs.com/1.2.6/quill.snow.css\" />\r\n              \r\n              <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n            </Head>\r\n  \r\n            <AppLayout>\r\n              <Component {...pageProps} />\r\n            </AppLayout>\r\n        </Provider>\r\n        )\r\n    }\r\n}\r\nconst configureStore = (initialState, option)=>{\r\n    const sagaMiddleware = createSagaMiddleware()\r\n    const middlewares = [sagaMiddleware]\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : compose(\r\n        applyMiddleware(...middlewares),\r\n        !option.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n    )\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\nexport default withRedux(configureStore)(MyApp)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAxBA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AADA;AACA;;AAFA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAPA;AACA;AA0BA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}